<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALXgtETJ8LkI9kzmGQ5o/hlGu
        TUJQr1AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2eSgTMn0vnzJ9LvoyfS7/Q5pA/1Cv
        TP9Qr0z/UK9N+lGuTJ5LtEsRAAAAAAAAAAAAAAAAAAAAAAAAAAAzdzMPMn0v2zJ9Lv8yfS7/Mn0u/zyO
        OfxQrkz9UK9M/1CvTP9Qr0z/UK9M2Em2SQ4AAAAAAAAAAAAAAAAAAAAAMn0ulTJ9Lv8yfS7/Mn0u/zJ9
        Lv86ijfXSaJG2FCvTP9Qr0z/UK9M/1CvTP9Qr02SAAAAAAAAAAAAAAAAOXE5CTJ9LvAyfS7/Mn0u/zJ9
        Lv8xfS+6O444rDyOOK1Qr0y9UK9M/1CvTP9Qr0z/UK9M7mCfQAgAAAAAAAAAADCAMDAyfS7/Mn0u/zJ9
        LvsyfS6PM2YzBTyOOas8jjmrVapVBk+wTJFQr0z7UK9M/1CvTP9PsEotAAAAAAAAAAAxfi5DMn4uxzJ9
        Lo8wfDAlNTrmPjU65sE1QfD+NkDw/jU55sAzN+Y8Ua5KJlCvTY9Qr03IUa5NQgAAAAAAAAAAAAAAAAAA
        AAAAAAAANTrkczU55f42P+7/NkP0/zZD9P81Pu3/NTnl/jQ55nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAANTXqGDU45Pk1OeX/NkHy/zZD9P82Q/T/NULy/zU55f80OeT4OjroFgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADY55Ew1OeX/NTnl/zZC8/82Q/T/NkP0/zZD8/81OeX/NTnl/zQ740oAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA4OOYpNTnl/zQ45P80P+7/NkP0/zZD9P80QO7/NDjk/zU55f80O+UnAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADU55bsyNd7nLjTa/zZD9P82Q/T/LjTa/zM23uc1OeW4AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzM+YUMjXhTSkpyXY2RPS5NkT0uSkpyXYyNd5NNjbkEwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALkb/Cy5G/wsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD+fwAA8A8AAOAHAADAAwAAwAMAAMJDAADMMwAA+B8AAPAP
        AADwDwAA8A8AAPAPAAD+fwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACuAKwYyfS49Mn0tdjJ9L5k5jDfISaRF9kmkRfZLqknIUa5LmFCvTHZRrk08VapVBgAA
        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
        AP//gAH//9AL///+f///////////////////////
</value>
  </data>
</root>